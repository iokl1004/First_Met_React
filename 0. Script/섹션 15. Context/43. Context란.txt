43. Context란?

컴포넌트의 props를 통한 데이터 전달을 하며, 이를 통해 어떤 컴포넌트든지 데이터에 쉽게 접근할 수 있음.

기존 방식의 단점은 여러 컴포넌트에 걸쳐서 자주 사용되는 데이터 이며, 예를들면 로그인 여부 및 프로필 정보 같은 것을 전달하려면 반복적인 코드가 많이 생기고 지저분해진다는 것임.

언제 컨텍스트를 사용하는 것이 좋을까요?
여러 개의 컴포넌트들이 접근해야하는 데이터 (로그인 여부, 로그인 정보, UI테마, 현재언어 등...)
곳곳에 있는 컴포넌트에서 접근이 자주 일어날 가능성이 높은 데이터임.

Context를 사용하기 전에 고려할 점.
컴포넌트와 Context가 연동되면 재사용성이 떨어지기 때문에 무조건 Context를 사용하는 것이 좋은건 아님.

