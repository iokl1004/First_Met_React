7. 리액트의 장점과 단점

장점 : 빠른 업데이트 & 렌더링 속도
웹사이트를 탐색 할 때, 화면에 바뀌는 내용을 업데이트라고 함.

빠른 업데이트를 위해 Virtual Dom 이라는것을 사용함.
Virtual DOM은 가상의 DOM이다.

DOM(Document Object Model) 은 웹 페이지를 정의하는 하나의 객체 라고 생각하면 되며, 하나의 웹사이트에 대한 정보를 모두 담고 있는 큰 그릿이라고 보면됨.

화면을 업데이트 하려면 DOM을 직접 수정해야 하는데, 이것은 성능에 영향을 크게 미치고, 비용도 굉장히 많이 드는 작업입니다. 왜냐하면 수정할 부분을 DOM의 데이터에서 모두 찾아야 하기 때문.

반면 리액트는 DOM을 직접 수정하는 것이 아니라 업데이트 해야할 최소한의 부분만을 찾아서 업데이트를 진행함.

두번째 장점. 컴포넌트 기반의 구조를 들 수 있음.
작은 레고 블록들이 모여서 하나의 완성된 모형이 되는 것과 비슷하다고 생각 하면됨.

세번째 장점. 재사용성(Reusability)
재사용성이 높아지면 어떤 장점이 있나요?
전체 소프트웨어의 개발 기간이 단축되고, 유지 보수가 용이하다.

리액트와 재사용성의 연관?
리액트는 컴포넌트 기반의 구조로 되어 있어서, 각 컴포넌트들은 웹사이트의 여러 곳에서 반복적으로 사용이 될 수 있음.

네번째 장점. 든든한 지원군 Meta가 있다!
활발한 지식공유 & 커뮤니티
---
리액트의 단점

첫번째 단점. 모든 라이브러리가 그렇지만은, 기존과는 다른방식의 라이브러리이기때문에 방대한 지식이 필요하다! Virtual DOM? JSX? Component? State? Props?
특정기술을 한번 배웠다고 끝나는 것이 아닌, 계속 뭔가 바뀐다...!

두번째 단점. 높은 상태관리 복잡도
보통 큰 규모의 프로젝트의 경우 상태관리를 위해서 Redux, MobX, 그리고 Recoil 같은 외부 상태관리 라이브러리를 사용하는 경우가 많음.